{"./":{"url":"./","title":"Introduction","keywords":"","body":""},"制造业知识/BOM.html":{"url":"制造业知识/BOM.html","title":"BOM","keywords":"","body":"BOM BOM作为企业进行设计、加工、管理的核心，不同的部门有不同的要求。例如，生产部门只需要描述自制件信息的制造 BOM，工艺部门只需要工艺 BOM，物资部门只需要原材料和标准件的采购 BOM。设计部门应提供涵盖以上各种BOM 的设计 BOM。故根据不同部门、不同角色、不同维度需要不同的BOM视图。 在产品的整个生命周期中，根据不同部门对 BOM的不同需求，主要存在以下几种 BOM：工程物料清单 EBOM、PBOM、MBOM、CBOM等。 BOM 别名：物料清单，Bill of Material 物料清单也称产品结构表、物料表，如当前系统部件的结构列表、导出的结构清单示例。它是产品结构的关系描述，将产品的原材料、零配件、组装件等予以拆解，并将各单项物料如物料编码、名称、规格、单位、工位、序号、损耗等按照制造流程的顺序记录下来，排列成一个清单，即形成物料清单。狭义上指产品结构，广义上需要产品结构与工艺流程等作为结合体，也可扩展到资源层面，形成全面的BOM。 EBOM 别名：工程BOM，Engineering BOM，设计BOM 主要是设计部门产生的数据。产品工程设计管理中使用的数据结构，它通常精确地描述了产品的设计指标和零件与零件之间的设计关系。对应文件形式主要有产品明细表、图样目录、材料定额明细表、产品各种分类明细表等。 PBOM 别名：计划BOM，Plan BOM，工艺BOM 主要是工艺部门根据工厂的加工水平和能力，对EBOM中的数据为依据，制定工艺计划、工序信息、生成计划BOM的数据。它用于工艺设计和生产制造管理，使用它可以明确地了解零件与零件之间的制造关系，跟踪零件是如何制造出来的，在哪里制造、由谁制造、用什么制造等信息。同时，PBOM也是ERP生产管理的关键管理数据结构之一。 MBOM 别名：制造BOM，Manufacturing BOM，生产BOM，装配BOM 是生产制造部门根据EBOM或PBOM的数据基础上，对设计和工艺装配步骤进行详细设计后得到的，主要描述了产品的装配顺序、工时定额、材料定额，以及相关设备、刀具、卡具和模具等工装信息，反映了零件、装配件和最终产品的制造方法和装配顺序，反映物料在生产车间之间合理流动和消失过程，也是ERP生产管理的关键管理数据结构之一。 CBOM 别名：成本BOM，Costing BOM 是财务部门根据设计部门、工艺部门、制造部门的数据信息进行汇总核算形成的财务报表。成本CBOM给出了成本信息，包括采购成本、制造成本、总采购成本、总制造费用以及分摊管理费用。它用于制造成本控制和成本差异的分析。 EBOM和PBOM的区别 数据来源不同。EBOM数据来源于CAD软件系统，PBOM则主要是对产品工艺实施规划的过程以及制造过程的反映产品属性的一种生成计划文件，一般来源CAPP系统。 EBOM和MBOM的区别 组成不尽相同。MBOM是设计和工艺的综合，除常规的产品结构物料外，还有相关的消耗品（如毛坯、用剂）和加工工具（夹具、刀具、量具），而出现在EBOM的物料也不一定出现在MBOM，如在EBOM中虚拟件通常不会出现在MBOM中。 反映内容侧重点不同。都反映产品结构，但EBOM重点反映产品的组成，MBOM除了反映产品的组成，还包括产品的制造层次和制造过程。 作业不同。MBOM是管理文件，EBOM纯粹是技术文件。 MBOM包含的信息更多。 设计表更 以EBOM到PBOM再到MBOM视图变化为例，设计更改是设计部门对原设计（MCAD装配结构数据）的修改引起的EBOM产品结构的基础数据对象更改，而这个设计更改会对PBOM和MBOM的结构都产生影响，即随着EBOM的更改直接导致PBOM、MBOM的更改，因为产品基础视图的底层设计数据发生了变化。 工艺变更 以EBOM到PBOM再到MBOM视图变化为例，工艺变更一般是对不合理的工艺进行改进，改变工艺的路线、工序的信息、工艺的计划，并不不涉及产品视图结构基础设计数据的更改，所以工艺更改一般只对PBOM、MBOM产生影响。 "},"制造业知识/数据资产管理.html":{"url":"制造业知识/数据资产管理.html","title":"数据资产管理","keywords":"","body":"结构化数据 基础数据 Reference Data 用结构化的语言描述属性、用于分类或目录整编的数据，也称作参考数据，如合同类型、职位、国家、币种。 主数据 Master Data 具有高业务价值的、可以在企业内跨流程跨系统被重复使用，具有唯一、准确、权威的数据源，如实体性组织、客户、人员基础配置。 事务数据 Transactional Data 用于记录企业经营过程中产生的业务时间，其实质是主数据之前活动产生的数据，如BOQ、支付指令、主生产计划。 观测数据 Observational Data 观测者通过观测工具获取观测对象行为/过程的记录数据，如设备采集数据、环境采集数据、系统日志等。 报告数据 Report Data 指对数据进行处理加工后，用作业务决策依据的诗句，如收入、成本。 外部数据 External Data 通过公共领域获取的数据，客观存在，新增、修改不受我司的影响，比如国家等。 内部数据 Internal Data 企业内经营产生的数据，在企业的业务流程中产生或在业务管理规定中定义，受企业经营影响，比如合同、项目、组织。 非结构化数据 Unstructured Data 形式不固定，不方便使用数据库二位逻辑表来展示的数据，数据量较大，比如网页、图片、视频、音频、XML。 数据资产分层 总体框架 "},"软件技术入门/MongoDB安装.html":{"url":"软件技术入门/MongoDB安装.html","title":"MongoDB安装","keywords":"","body":"MongoDB安装 安装brew /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" 将brew加入命令行 echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> /Users/jingyawang/.zprofile eval \"$(/opt/homebrew/bin/brew shellenv)\" Download the official Homebrew formula for MongoDB and the Database Tools brew tap mongodb/brew 安装MongoDB brew install mongodb-community@5.0 启动mongod mongod --config /opt/homebrew/etc/mongod.conf "},"软件技术入门/NodeJS安装.html":{"url":"软件技术入门/NodeJS安装.html","title":"NodeJS安装","keywords":"","body":"成功安装NodeJS将同时安装NPM。为方便NodeJS版本管理，我们首先安装NVM(Node Version Manager)。 安装NVM。 brew install nvm 按照提示在.bash_profile中添加NVM路径。 export NVM_DIR=\"$HOME/.nvm\" [ -s \"/opt/homebrew/opt/nvm/nvm.sh\" ] && \\. \"/opt/homebrew/opt/nvm/nvm.sh\" # This loads nvm [ -s \"/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm\" ] && \\. \"/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm\" # This loads nvm bash_completion 用NVM安装NodeJS不同版本。 nvm install stable #安装NodeJS最新版本 nvm install 10 #安装NodeJS V10 检查当前使用的NodeJS和NPM版本。 node -v npm -v node modules将被安装在这个路径下。 /Users/xxxxx/.nvm/versions/node/v10.24.1/bin "},"软件技术入门/PythonExcel.html":{"url":"软件技术入门/PythonExcel.html","title":"Python Excel","keywords":"","body":"Python Excel xlrd import xlrd workbook = xlrd.open_workbook(filename=\"./.xlsx\") worksheet = workbook.sheet_by_index(0) Number of rows - worksheet.nrows Cell value - worksheet.cell_value(, ) xlwt import xlwt destWb = xlwt.Workbook() destWs = destWb.add_sheet('') xlutils import xlutils.copy insert copy workbook = xlrd.open_workbook(filename=\"./.xlsx\") worksheet = workbook.sheet_by_index(0) destWb = copy(workbook) destWs = destWb.get_sheet(0) Write value - destWs.write(, , ) Save Excel - destWb.save() Excel日期按String读取 def dateToStr(excelDate): datetimeDate = xlrd.xldate_as_datetime(excelDate, 0) dateObj = datetimeDate.date() return dateObj.isoformat() "},"软件技术入门/Python安装.html":{"url":"软件技术入门/Python安装.html","title":"Python安装","keywords":"","body":"Python安装 安装python3 MacOS环境默认Python2.7版本，需安装Python3后，用pip3安装virtualenv。 如需将Python3设置为默认版本 ln -s -f /usr/local/bin/python3.10 /usr/local/bin/python 安装virtualenv pip install virtualenv 创建python虚拟环境 virtualenv 项目文件夹名称 进入python虚拟环境 source 项目文件夹名称/bin/activate Pip install 需要的packages pip install pandas "},"软件技术入门/vue-cli构建Vue项目.html":{"url":"软件技术入门/vue-cli构建Vue项目.html","title":"vue-cli构建Vue项目","keywords":"","body":"vue-cli创建Vue项目 创建新的project vue init 得到package.json 添加需要的package npm install vue --save-dev Vue @vue/cli-service Bootstrap-vue Vue-template-compiler Vue-router package.json中添加 \"scripts\": { \"serve\": \"vue-cli-service serve\", \"build\": \"vue-cli-service build\", \"lint\": \"vue-cli-service lint\", \"start\": \"nodemon ./server.js\" } npm run serve src文件夹中创建main.js 注意 需要注意的是，采用vue-cli构建的Vue项目，项目构建后入口不是index.html，因此，必要的时候需要采用webpack搭建Vue项目。 "},"软件技术入门/webpack搭建Vue项目.html":{"url":"软件技术入门/webpack搭建Vue项目.html","title":"webpack搭建Vue项目","keywords":"","body":"webpack搭建 空文件夹下 npm init 安装vue和webpack相关的dependency vue vue-loader webpack webpack-dev-server html-webpack-plugin 目录结构 node_modules public index.html src app.vue main.js package.json package-lock.json webpack.config.js main.js import {createApp} from \"vue\"; import App from './app' const app = createApp(App) app.mount('#app') index.html Title webpack.config.js const path = require('path'); const {VueLoaderPlugin} = require('vue-loader') const HtmlWebpackPlugin = require('html-webpack-plugin') module.exports = { mode:'development', devtool:'source-map', entry:'./src/main.js', output:{ path:path.resolve(__dirname,'dist'), filename:'main.js' }, watch: true, module:{ rules:[ { test:/\\.vue$/, loader:'vue-loader' }, ] }, plugins:[ new VueLoaderPlugin(), new HtmlWebpackPlugin({template:'./public/index.html'}), //JS或者CSS文件可以自动引入到html中 ], resolve: { alias: { \"@\": path.resolve('src') }, extensions: ['.js', '.css', '.vue', '.png', '.jpeg'], //配置后缀名 }, devServer: { port:8080, hot:true, open:true, static: { directory: path.join(__dirname, './'), watch: true } } } package.json \"scripts\": { \"start\": \"webpack-dev-server\", \"build\": \"webpack\" } 关于如何简写路径 在webpack.config.js中添加alias，在import时，即可简写为@/components/xxx，后缀名也可省略。 resolve: { alias: { \"@\": path.resolve('src'), \"@components\":path.resolve(\"src/components\") }, extensions: ['.js', '.css', '.vue', '.png', '.jpeg'], //配置后缀名 } 关于url-loader url-loader内部封装了file-loader，而file-loader在新版本中esModule默认为是true，即默认使用ES模块语法。 module: { rules: [ { test: /\\.(jpe?g|png)$/, loader: 'url-loader', options: { limit: 10240, esModule: false } } ] } "},"软件技术入门/微信小程序入门.html":{"url":"软件技术入门/微信小程序入门.html","title":"微信小程序入门","keywords":"","body":"微信小程序入门 安装微信小程序原生IDE https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html app.json pages注册所有页面 tabBar管理tab页面 { \"pages\":[ \"pages/index/index\", \"pages/targets/targets\", \"pages/gifts/gifts\", \"pages/add/add\", \"pages/about/about\", \"pages/history/history\" ], \"window\":{ \"backgroundTextStyle\":\"light\", \"navigationBarBackgroundColor\": \"#fff\", \"navigationBarTextStyle\":\"black\" }, \"tabBar\": { \"color\": \"#cacaca\", \"borderStyle\": \"white\", \"backgroundColor\": \"#ffffff\", \"list\": [{ \"pagePath\": \"pages/targets/targets\", \"iconPath\": \"images/target.jpeg\", \"selectedIconPath\": \"images/target.jpeg\", \"text\": \"目标\" }, { \"pagePath\": \"pages/gifts/gifts\", \"iconPath\": \"images/gift.jpeg\", \"selectedIconPath\": \"images/gift.jpeg\", \"text\": \"兑换\" }, { \"pagePath\": \"pages/about/about\", \"iconPath\": \"images/redlove.jpeg\", \"selectedIconPath\": \"images/redlove.jpeg\", \"text\": \"积分\" }], \"position\":\"bottom\" }, \"style\": \"v2\", \"sitemapLocation\": \"sitemap.json\" } wx getUserProfile wx.getUserProfile({ desc: '用户登录', success: (res) => { }, complete: (res) => { } }); switchTab wx.switchTab({ url: }); setStorage wx.setStorage({ key: 'user', data: res.userInfo, encrypt: true }); getStorageSync wx.getStorageSync('user', true) form data传后端 前端 ... ... 确定 ... 后端 submitForm(e) { var space = e.detail.value.space; } 绑定数据传后端 前端 完成 后端 completeTodo(option) { var todo = option.currentTarget.dataset.completedtodo; } 前端提示框 {{ dialogMsg }} 朕已阅 weui.wxss组件库 官网地址：https://developers.weixin.qq.com/miniprogram/dev/platform-capabilities/extended/weui/ 将weui.wxss添加到项目中并在app.wxss中引用@import 'weui.wxss'; form验证 WxValidate.js "},"项目管理知识/工具与技术/接口模型/原型、线框图和显示-操作-响应模型.html":{"url":"项目管理知识/工具与技术/接口模型/原型、线框图和显示-操作-响应模型.html","title":"原型、线框图和显示-操作-响应模型","keywords":"","body":"原型、线框图和显示-操作-响应模型 原型 在构建预期解决方案之前的表示法，可分为低保真原型和高保真原型。屏幕布局草图是低保真原型，交互式用户界面是高保真原型。 故事版是一种原型法。 线框图 线框图是原型的一种，专用于模拟用户界面设计，也用于呈现屏幕外观。线框图可以是低保真的，如草图；也可以是高保真的，如能真实呈现最终用户界面外观样式。 显示-操作-响应模型 显示-操作-响应模型采用扁平化的格式来描述页面元素及赋予每个元素的功能，通常与原型或线框图结合使用，以连接用户界面元素需求和可视化的呈现方式。 有助于明确用户界面需求，把个性化需求说明置于屏幕界面上元素的上下文中。 通常在功能需求或验收标准得到明确后创建。 "},"项目管理知识/工具与技术/数据模型/实体关系图.html":{"url":"项目管理知识/工具与技术/数据模型/实体关系图.html","title":"实体关系图","keywords":"","body":"实体关系图 类别：数据模型 别名：商业数据图，ERD 实体关系图是一种显示产品中的商业数据对象或感兴趣的信息片段，以及这些对象之间的基数关系的数据模型。基数是指一个实体和其他实体发生关系的次数，以及这种关系是否必需或可选。 在实体关系图中显示的数据对象不是数据库中确切的数据对象，而是从商业角度得到解决方案中数据的概念视图。实体关系图有助于识别在系统中创建、被系统使用或从系统输出的数据。 "},"项目管理知识/工具与技术/数据模型/数据字典.html":{"url":"项目管理知识/工具与技术/数据模型/数据字典.html","title":"数据字典","keywords":"","body":"数据字典 类别：数据模型 数据域是实体关系图中数据对象的补充细节。 数据字典是罗列数据对象的数据域及其属性的一种数据模型。数据域的属性详述了域的信息，常见的属性包括名称、描述、大小、验证规则和商业规则。 数据字典用于明确数据非常详细的方面，并从商业干系人的视角获取数据域和属性。获取的信息不需要清晰地反映数据库设计。但是，数据库设计者使用数据字典作为输入来创建数据库结构。 数据字典通常在使用其他数据模型识别数据对象之后，并且在数据对象需要指定更多细节时创建。 "},"项目管理知识/工具与技术/数据模型/数据流向图.html":{"url":"项目管理知识/工具与技术/数据模型/数据流向图.html","title":"数据流向图","keywords":"","body":"数据流向图 类别：数据模型 数据流向图是描述数据在外部实体、数据存储和过程之间流动的一种数据模型。外部实体可以是参与者或系统、数据流向图显示了每个过程的数据输入和输出。 数据流向图通常在分析过程中创建。通常，需要先创建实体关系图、过程流和生态系统图，以识别在数据刘想吐中所显示的数据对象、过程和系统。 数据流向图最好作为工具来帮助干系人和开发者理解数据流如何通过系统，进而确定具体数据需求。 "},"项目管理知识/工具与技术/数据模型/状态表状态图.html":{"url":"项目管理知识/工具与技术/数据模型/状态表状态图.html","title":"状态表状态图","keywords":"","body":"状态表/状态图 类别：数据模型 状态图和状态表都是用于显示对象的有效状态并允许在它们之间进行过渡的数据模型。对象可以是在分析解决方案时的山页数据条目或任何感兴趣的信息。 这两种模型都描述了单个对象在一个解决方案中所具有的所有状态，以及该对象在状态之间如何过渡 有助于发现与对象状态流转相关的商业规则。 帮助商务分析师明确解决方案中一个对象的生命周期。例如工作流的对象（如审批过程）就是用状态模型来帮助分析的。 状态表最常用来进行分析，已确保涵盖所有的过渡，而状态图更便于让相关方以可视化的方式看到有效的过渡流。 "},"项目管理知识/工具与技术/范围模型/SWOT分析.html":{"url":"项目管理知识/工具与技术/范围模型/SWOT分析.html","title":"SWOT分析","keywords":"","body":" "},"项目管理知识/工具与技术/范围模型/事件清单.html":{"url":"项目管理知识/工具与技术/范围模型/事件清单.html","title":"事件清单","keywords":"","body":"事件清单 类别：范围模型 事件清单是描述触发解决方案行为的任何外部事件的范围模型。事件清单帮助定义解决方案必须做出反应或处理的范围内事件。 事件响应表示事件清单的延伸，用于描述系统对任何事件触发器的响应。 "},"项目管理知识/工具与技术/范围模型/关联图.html":{"url":"项目管理知识/工具与技术/范围模型/关联图.html","title":"关联图","keywords":"","body":"关联图 Interrelationship Diagram 描绘了既定情境的相关原因及结果。 识别首要原因. 关联图对于确定根本原因之间的关系非常有用，但是就像鱼骨图一样，它们都不足以理解所有的根本原因。 "},"项目管理知识/工具与技术/范围模型/特性模型.html":{"url":"项目管理知识/工具与技术/范围模型/特性模型.html","title":"特性模型","keywords":"","body":"特性模型 别名：功能模型 类别：范围模型 目的模型和商业目标模型之后 特性模型用树状或层级结构排列，以可视化的方式表示解决方案的所有特性。特性模型有助于说明特性是如何组合在一起的，以及哪个特性是其他特性的子特性。 "},"项目管理知识/工具与技术/范围模型/生态系统图.html":{"url":"项目管理知识/工具与技术/范围模型/生态系统图.html","title":"生态系统图","keywords":"","body":"生态系统图 类别：范围模型 生态系统图显示了所有相关的系统、系统之间的关系，以及流经它们的可选的任何数据对象。 生态系统图由代表系统的方形和方形间秒回关系的线条组成。当数据显示在图标中时，线上的标签显示数据对象，箭头代表数据流的方向。 生态系统图和系统交互图稍有不同。生态系统图可能包括分析中的解决方案不直接交互的接口和系统。 生态系统图是系统接口高层级的表示，但它不包含这些接口具体要求。系统接口表应完成系统生态图识别的各个接口。数据模型应被创建来定义流经系统的每个数据对象的数据要求。 "},"项目管理知识/工具与技术/范围模型/用例图.html":{"url":"项目管理知识/工具与技术/范围模型/用例图.html","title":"用例图","keywords":"","body":"用例图 类别：范围模型 用例图显示了解决方案范围内的所有用例。创建用例图包括识别解决方案的使用者和每个使用者将如何使用解决方案的可能场景清单。用例图把用户和相关用例相关联，并且确定哪些用例在给定解决方案的范围内，哪些在范围外。 用例图能够用来概括解决方案的范围，突出添加的主要功能（即用例）。显示了直接与解决方案交互的干系人，以及在系统功能（用例）和参与者之间需要创建的接口。 用例图不能显示需求，但有助于为商业分析工作组织需求或将需求布局在需求文档中。 "},"项目管理知识/工具与技术/范围模型/目的模型和商业目标模型.html":{"url":"项目管理知识/工具与技术/范围模型/目的模型和商业目标模型.html","title":"目的模型和商业目标模型","keywords":"","body":"目的模型和商业目标模型 类别：范围模型 目的模型和商业目标模型都是组织并反映与其他产品信息有关的目的、商业目标、成功衡量标准和高层级功能的范围模型。 商业问题和商业目标的过程链方便呈现项目价值的来源。不论价值是否确认为增加收入、降低成本、或避免损失，目的模型和商业目标模型都可视化地表示支持功能优先级决策和产品范围管理的价值。 目的模型和商业目标模型提供了明确商业需求的结构。每个项目功能性需求应可追溯到所确认的商业问题和目标，保持专注于顶层商业问题和商业目标，可以引导交付有价值的解决方案并形成功能的范围。需求或功能的价值能被量化，都是基于模型中的需求如何为商业目标做贡献，这有助于确定最重要的功能来实现或确定最小可售功能（MMFs）。 目的模型和商业目标模型通常都是在新项目集或项目的开始或更早的时候被创建，以便于在项目组合中对项目集和项目进行排序。处于优先级目的，可以在任何时间点创建目的模型和商业目标模型。 "},"项目管理知识/工具与技术/范围模型/系统交互图.html":{"url":"项目管理知识/工具与技术/范围模型/系统交互图.html","title":"系统交互图","keywords":"","body":"系统交互图 类别：范围模型 别名：0级数据流图，高阶流程图 系统交互图显示了解决方案中系统的所有直接系统和人机界面。系统交互图清晰地描述了范围内的系统和所有的输入或输出，包括提供输入和接受输出的外部系统参与者。 系统交互图通常将开发中的系统显示成一个在中心的圆形，接口系统作为方形，参与者以人形或方形表示，再用线把它们连接一起，以显示实际的接口和流经它们的数据。 系统交互图通常应尽早创建以定义范围。 系统交互图有助于确定哪里有接口需求或数据需求。 该模型经常引导商业分析师创建系统接口表、用户界面流、显示-操作-响应模型，或其他有助于明确接口需求的接口模型。 "},"项目管理知识/工具与技术/范围模型/组织结构图.html":{"url":"项目管理知识/工具与技术/范围模型/组织结构图.html","title":"组织结构图","keywords":"","body":"组织结构图 类别：范围模型 组织结构图是展示组织内部或部分组织内部报告结构的范围模型。 组织结构图同于确定使用解决方案或受解决方案影响的人员，而这些人员不一定是那些与项目组合、项目集或项目紧密合作的人员。 组织结构图在早期被创建，并且在整个过程中被不断更新，以确保作为启发目的的任何相关方或相关方群组的识别不会被遗漏。 "},"项目管理知识/工具与技术/范围模型/鱼骨图.html":{"url":"项目管理知识/工具与技术/范围模型/鱼骨图.html","title":"鱼骨图","keywords":"","body":"鱼骨图 别名：因果图，石川图 并不足以理解所有的根本原因。 "},"项目管理知识/工具与技术/过程模型/用例.html":{"url":"项目管理知识/工具与技术/过程模型/用例.html","title":"用例","keywords":"","body":"用例 类别：过程模型 用例是用文本叙述的手法来描述系统——用户的交互以成功完成目的的过程模型。目的代表了主要参与者在用例中视图完成的任务，通常是用例名称的一部分。每个用例都包含一个正常流（系统和用户之间最常见的交互场景），以及当场景偏离正常流时的替代流和异常流。 此模型常用于识别和明细需求，尤其是在将商业需求转移到相关方需求或解决方案需求时。 用例通常在过程流之后被创建，为过程流中的具体步骤提供更多详细信息，特别是在用户和系统之间存在复杂交互的情况下。 用例有时也被用来代替过程流并用于识别功能性或非功能性需求或验收标准。用例可以用作展示解决方案需求的方式。 用例不应包含非功能需求，因为用例更多的是从用户的角度去考查。 名称 用例名称，动词短语，表示用例目的 ID 每个用例唯一的标识符 描述 一个简短的句子，说明用户想要做什么及他们会得到什么好处 参与者 与系统交互以完成任务的用户类型 组织效益 组织希望从所描述的功能中获得的价值，用于优先级排序 触发器 导致用例开始的事件 前提条件 描述在用例开始之前应该到位的所有内容，以便用例能成功实施 后置条件 用例结束时环境中所有变化的内容 正常流 从前提条件转到预期结果的正常步骤 替代流 除了在主流中描述的以外，参与者可以用来实现目标的其他步骤 异常流 在正常流中的错误或中断，需要参与者或系统执行不同的操作来响应异常 "},"项目管理知识/工具与技术/过程模型/用户故事.html":{"url":"项目管理知识/工具与技术/过程模型/用户故事.html","title":"用户故事","keywords":"","body":"用户故事 类别：过程模型 用户故事是一种从用户的角度记录相关方需求的方法，重点是关注用户在完成故事后获得的价值或效益。用户故事有助于把商业需求和解决方案需求连接起来。用户故事包含很多需求，是需求的功能组合。故事可以直接追溯到商业目标以证实需求的价值。 通常用户故事用于自适应方法，比如敏捷开发。在适应型方法中，用户故事通常是表达需求的方法。在敏捷方法里，用户故事组成一个未完项列表，用来作为未来开发优先级排序的基础。当用户故事接近未完项的顶部，这些故事应使用相关的建模技术详细描述，以生成为开发的充足的详细信息（被称为“梳理未完项”）。 当使用用户故事，验收标准被用来确认这个故事完成并预期工作。验收标准确定产品的满足条件。 用户故事 作为，我希望能够，这样我就可以 验收标准 指定，当时，则 用户故事通常采用的格式： INVEST首字母原则的元素可应用于各种格式的需求，目的是确保用户故事的质量： Independent 独立的。每个故事应该独立，尽量避免建立故事间的依赖关系。 Negotiable 可协商的（拥抱变化）。故事任何时间都是可协商的，这包括故事的内容、优先级、形式和功能，以在实现前变得更具体。 Valuable 有价值的。故事只定义了对企业有价值和能帮助解决商业问题的特征或功能。 Estimable 可估计的。故事应足够清晰以产生一个有效估计或导致一个将产生估计的讨论。 Small 小规模的。故事在单个迭代里应足够小以便实现，增加实际价值的增量。 Testable 可测试的。每个故事应该独立地验证。 史诗 用户故事太大以至于不能在单一迭代中完成，则被认为是史诗。史诗要进一步分解为故事（或额外的史诗）。开发团队使用故事来建立产品。 故事明细 别名：未完项梳理 故事明细是通过提供额外的信息将用户故事进一步细化直到它们已准备好用来开发的过程。 故事明细是在构建解决方案之前为每个故事添加额外细节的技术。 故事切片 用于将史诗或用户故事从高级别划分为较低级别的技术。 史诗、用户故事或需求都可以通过多种方式进行切分，包括接口类型、用户或角色、功能、数据、商业规则、约束条件或以上任意组合。 切片都将按照每个切片所交付的价值进行优先级排序。 "},"项目管理知识/工具与技术/过程模型/过程流.html":{"url":"项目管理知识/工具与技术/过程模型/过程流.html","title":"过程流","keywords":"","body":"过程流 别名：泳道图，过程图，过程地图，进程图，过程流程图，系统流 类别：过程模型 过程流可视化地描述人们在他们工作中执行的任务。通常情况下，过程流描述了人们采取的步骤。 在过程流中，方形表示步骤，菱形表示决策逻辑，箭头表示过程顺序。 过程流可能包含泳道，泳道是由同一个人、同一群人或同一系统实施的一组步骤。 变体 系统流 用于描述系统步骤。 价值流图 除传统过程流所包含的信息以外，价值流图还显示了过程中发生的任何延迟、排队或切换。目的是识别过程中花费的非增值时间以简化流程。 活动图 可用来对一般工作流建模，但通常会用来以可视化的方式显示用例的复杂流。活动图通常在一个图中显示用户与系统的交互，并且体现了用例的文字描述。 序列图 序列图用于描述用户或系统过程如何在任何涉及的用户或系统中相互作用，以及对执行的过程或步骤进行排序。序列图对于与技术团队沟通系统间的信息流动、将功能委派到它将要执行的地方，以及步骤间的控制流都是非常有用的。在通过显示信息的流向来确定需要哪些商业对象时，序列图尤其有用。 "},"项目管理知识/工具与技术/MoSCoW.html":{"url":"项目管理知识/工具与技术/MoSCoW.html","title":"Mo S Co W","keywords":"","body":"MoSCoW 需求分类的技术 必须具有 Must 应该具有 Should 可以具有 Could 不必具有 Won't "},"项目管理知识/工具与技术/产品未完项.html":{"url":"项目管理知识/工具与技术/产品未完项.html","title":"产品未完项","keywords":"","body":"产品未完项 产品未完项是需要向解决方案交付的所有产品未完项条目的清单，通常是用户故事、需求或特性。 产品未完项中的条目按照商业价值或对客户的重要性进行排列，并且在产品的整个生命周期或项目的持续时间内不断被更新。 DEEP 详略适宜的 可估算的 涌现的 排序的 "},"项目管理知识/工具与技术/产品组合矩阵.html":{"url":"项目管理知识/工具与技术/产品组合矩阵.html","title":"产品组合矩阵","keywords":"","body":"产品组合矩阵 产品组合矩阵是一些组织用于定性分析其产品或产品线的市场分析象限图。 增长率高，占有率低（问题类产品，导入期） 增长率高，占有率高（明星类产品，增长期） 增长率低，占有率高（金牛类产品，成熟期） 增长率低，占有率低（瘦狗类产品，衰退期） "},"项目管理知识/工具与技术/力场分析.html":{"url":"项目管理知识/工具与技术/力场分析.html","title":"力场分析","keywords":"","body":"力场分析 力场分析是一种决策技术，可用于帮助产品团队分析是否有足够的支持来进行变更。模型的中间提供了对该变更的描述。团队识别出支持或反对变更的力，把支持变更的力列在左边，把反对变更的力列在右边。 "},"项目管理知识/工具与技术/卡诺分析.html":{"url":"项目管理知识/工具与技术/卡诺分析.html","title":"卡诺分析","keywords":"","body":"卡诺分析 卡诺分析是一种从客户视角考虑产品特性的技术，用来对产品特性进行建模和分析。 卡诺模型中有五种常见的产品特性类别。 基本型。对相关方仅提供满意度较低的特性。但是，当最终解决方案缺失特性时，会引起极度不满。相关方不会对这一类别的特性给予太多的考虑，因为他们已假设这些特性将包含在最终解决方案里。 期望型。相关方考虑的、期望的并用来评估最终解决方案的特性。这些特性可以使相关方满意或不满意，这取决于解决方案在多大程度上能实现此类特性。 兴奋型。产品区别于竞争者产品的特性，有时被称为“哇”因素。愉悦源自感情因素。当这些特性存在时，相关方极度满意。当这些特性不存在时，通常，相关方甚至没有意识到该功能是可能的，并且不会对此感到不满意。 不关心型。既不会使客户满意也不会令其不满意的特性。客户不关心是否包含这些特性。 反向型。当最终产品不包含这些特性时，相关方的满意度会增加。当最终产品呈现或增加这些特性时，相关方的满意度会降低。 "},"项目管理知识/工具与技术/可行性分析.html":{"url":"项目管理知识/工具与技术/可行性分析.html","title":"可行性分析","keywords":"","body":"可行性分析 运营可行性 技术可行性 成本收益可行性 时间可行性 "},"项目管理知识/工具与技术/名义小组.html":{"url":"项目管理知识/工具与技术/名义小组.html","title":"名义小组","keywords":"","body":"名义小组 名义小组技术是—种特殊的、更加结构化的头脑风暴法。 宣布会议主题和规则； 把参会者分成多个小组（每组有约5名成员）； 按小组开展头脑风暴； 由每个成员花几分钟静思并写下自己所想到的所有主意； 组长依次请每个成员提出一个主意，分多轮进行直到每个成员说完自己的所有主意； 组长依次请每个成员对主意进行评价； 由全体成员进行投票，排列出所有主意的优先级； 所有成员重新归为一个大组，基于各小组的结果开展进一步的头脑风暴，或对各小组的结果进行评审或排序投票； 得到结果（最有价值的—些创意的清单）。 "},"项目管理知识/工具与技术/帕累托分析.html":{"url":"项目管理知识/工具与技术/帕累托分析.html","title":"帕累托分析","keywords":"","body":"帕累托分析 帕累托图是一种直方图，可以用来传达根本原因分析的结果。 用于分析问题或原因的重要关注内容。 2/8原则，即80%的问题可以与20%的原因相关。 "},"项目管理知识/工具与技术/建模明细.html":{"url":"项目管理知识/工具与技术/建模明细.html","title":"建模明细","keywords":"","body":"建模明细 使用模型组合来进一步识别产品信息中的差距、不一致或冗余的技术。 是描述如何使用模型组合来确认完整性或寻找差距的一种技术。 "},"项目管理知识/工具与技术/引导式研讨会.html":{"url":"项目管理知识/工具与技术/引导式研讨会.html","title":"引导式研讨会","keywords":"","body":"引导式研讨会 由有经验且中立的引导师和一组通过精心挑选的相关方共同领导，以协作并朝着既定的目标工作。 当目标聚焦于将跨职能的相关方聚在一起来定义和讨论产品信息时，该研讨会通常被称为需求研讨会。 研讨会被认为是一种用于跨多个领域快速定义产品信息和协调相关方差异的主要技术。 将需求从不一致达成一致。有效引导的会议可以建立信任，加强关系，改善参与者之间的沟通，最终促进相关方达成一致。 "},"项目管理知识/工具与技术/德尔菲法.html":{"url":"项目管理知识/工具与技术/德尔菲法.html","title":"德尔菲法","keywords":"","body":"德尔菲法 德尔菲法是一种建立共识的技术，由主题专家匿名参加。 一位引导者用问卷的方式来启发关于该领域的重要观点。 随后，总结过的答复再循环分发给专家，供他们进一步提出建议。向专家征求建议的过程会反复进行几轮，直到结果开始趋同。 利用这种过程，在几轮后就可达成共识。 德尔菲法能减少数据中的偏差，并且防止任何个人过度影响成果。 德尔菲法可以用来在任何事情上达成共识，包括需求批准、需求确认、估算、优先级排序和设计选项偏好。 "},"项目管理知识/工具与技术/时间盒法.html":{"url":"项目管理知识/工具与技术/时间盒法.html","title":"时间盒法","keywords":"","body":"时间盒法 Timeboxing 一种在排序时使用的估算或规划技术，通过设置严格的时间限制，并且对团队在这段时间内可以完成的工作进行排序来实现。 "},"项目管理知识/工具与技术/波特五力模型.html":{"url":"项目管理知识/工具与技术/波特五力模型.html","title":"波特五力模型","keywords":"","body":"波特五力模型 供应商讨价还价能力 购买者讨价还价能力 潜在进入者的威胁 替代品的威胁 现有企业之间的竞争 "},"项目管理知识/工具与技术/焦点小组.html":{"url":"项目管理知识/工具与技术/焦点小组.html","title":"焦点小组","keywords":"","body":"焦点小组 焦点小组将经过资格预审的相关方和主题专家汇聚到一起，以了解它们对所提议的解决方案的期望和态度。 焦点小组提供了直接从客户和/或终端用户那里获得反馈的机会。 最佳人数8~12人，引导者扮演重要角色。 "},"项目管理知识/工具与技术/特性注入.html":{"url":"项目管理知识/工具与技术/特性注入.html","title":"特性注入","keywords":"","body":"特性注入 集中讨论和分析可以立即获得价值回报的特性。 引导团队值分析那些被认为是最高价值的特性。目标是减少团队花在分析低价值需求上的时间。 在使用特性注入时，产品团队应逆向工作，首先专注于价值，然后专注于特性，从而获得价值。 确定商业价值； 注入特性； 现场实例。 "},"项目管理知识/工具与技术/目的对准模型.html":{"url":"项目管理知识/工具与技术/目的对准模型.html","title":"目的对准模型","keywords":"","body":"目的对准模型 目的对准模型提供了支持战略或产品决策的框架。该框架用于将选项与它所支持的商业目的进行对齐，从而对选项进行分类。 区分者。这类特性是关键任务，并且提供高度的市场差异化。它们可以帮助组织赢得市场份额，提高其竞争优势，并且超越其竞争对手。组织需要不断地在这一领域进行投资，以取得突破，提供独特性，并且在竞争中保持领先。 同等者。此类特性帮助组织保持其在市场上的同等地位。对同等特性的投资可能是关键任务，但它们不能为组织提供竞争优势。这类特性只是确保组织的业务与竞争对手保持同等水平。 合作伙伴。此类特性并不是关键任务，但如果提供了这些特性，它们将使组织能够在市场上脱颖而出。因此，组织将从外部寻找合作伙伴来提供这些特性，但不会对这些特性进行投资。通过提供这些特性而有所区分的组织是一个可行的合作伙伴。 谁在乎。这类特性对组织既没有区分也不是关键任务。这类特性通常不会被构建。 "},"项目管理知识/工具与技术/跟踪矩阵.html":{"url":"项目管理知识/工具与技术/跟踪矩阵.html","title":"跟踪矩阵","keywords":"","body":"跟踪矩阵 跟踪矩阵是将产品需求的最初来源与满足需求的可交付成果关联起来的表格。它能支持许多不同种类的对象之间的关联，并且提供在项目和产品生命周期间跟踪产品信息的机制。 跟踪矩阵可以用来建立产品信息、可交付成果和项目工作间的关系，从而确保它们能追溯到商业目标。建立的这些联系可以通过只把相关的产品信息包含在解决方案中来管理范围蔓延。 需求跟踪矩阵属性 需求跟踪矩阵使用的典型属性包括 需求编号，用于各项需求的唯一识别属性。 需求的简短文字描述。 目标 商业需求 商业目的和目标 项目目标 产品开发阶段 设计 构建 测试 实施 验证 WBS 状态：如已激活、已批准、已延期、已取消、已增加 列入的理由 优先级 负责人 来源 版本 完成日期 干系人满意度 稳定性 复杂性 验收标准 层级 跟踪矩阵通常按层级建立，从高层级需求开始，随着需求渐进明细，填入越来越多的细节。 变形 交互矩阵 对于使用适应型生命周期的项目，产品团队可以选择开发交互矩阵。 交互矩阵是跟踪矩阵的轻量级版本，可以用来决定需求是否已有足够的细节或仍有缺失的实体。 交互矩阵是暂时的，代表了一个即时快照。交互矩阵无须维护，仅用于在项目期间的任何给定时间对需求进行评价。 跟踪矩阵一般会保持在整个项目组合、项目集或项目中。 "},"项目管理知识/需求分析概念/产品需求类型.html":{"url":"项目管理知识/需求分析概念/产品需求类型.html","title":"产品需求类型","keywords":"","body":"产品需求类型 商业需求——组织高层级的需要。例如商业问题或机会、实施项目的原因，以及商业正在寻求实现的可测量的目标陈述。商业需求用于为解决方案提供背景和方向，以便解决方案可以满足商业需要。 相关方需求 解决方案需求 功能需求——产品的行为。功能需求的类型包括产品应该执行的动作、过程和交互。 非功能需求（别名：产品质量要求，服务质量要求）——产品正常运行所需的环境条件或质量要求。非功能需求的类型包括可靠性、保密性、性能、安全性、服务水平和可支持性。 过渡需求——从“当前状态”过渡到“将来状态”所需的临时能力（如数据转换和培训需求）和运营变更。一旦完成向“将来状态”的过渡，就不再需要过渡需求。 "},"项目管理知识/需求分析概念/文件.html":{"url":"项目管理知识/需求分析概念/文件.html","title":"文件","keywords":"","body":"情境说明书 Situation Statement 问题（或机会）是“a” 具有的效果是“b” 产生的影响是“c” 情境说明书是识别问题或机会的输出，步骤如下： 识别干系人 调查问题或机会 收集数据评估情境 起草情境说明书 获取干系人对情境说明书的批准 商业分析计划？？？ 了解项目环境 商业分析工作计划？？？ 确定任务和活动 识别资源 确定角色和职责 商业计划 商业论证 Business Case 商业论证提供了文档化的经济可行性研究报告，从价值的角度确立了由项目组合组件、项目集或项目所交付的效益的有效性。商业论证是商业目的和目标与为执行商业策略而建立的项目组合组件、项目集合项目间的公共链接。 商业论证的基础组成部分： 问题/机会。详细说明什么事正咋以刺激行动的必要。 情境分析。列出组织目的和目标以评估一个潜在方案如何对目的和目标提供支持和产生贡献，包括问题的根本原因或机会的主要贡献因素。 建议。呈现每个潜在选项的可行性分析的结果，识别每个选项的任何约束条件、假设、风险和相关性。估算包括测量收益实现的计划。 项目章程 Project Charter 由项目启动者或发起人发布，正式批准项目成立，并授权项目经理使用组织资源开展项目活动的文件。 描述和目标 商业目的/目标 高层级产品和项目组合、项目集或项目的范围 风险 里程碑进度计划概要 预算概要信息 高层级风险和依赖性 成功标准 与项目组合、项目集或项目有关的内部和外部信息 "},"项目管理知识/需求分析概念/需求分析.html":{"url":"项目管理知识/需求分析概念/需求分析.html","title":"需求分析","keywords":"","body":"需求分析 flowchart LR ​ A[Business Problem (BP) / Business Opportunity (BO)]-->B[Business Need (BN)] ​ B[Business Need (BN)]-->C[Business Request (BR)] ​ C[Business Request (BR)]-->D[Decision Analysis and Resolution (DAR)] end 商业需要Business Need 描述了组织或客户的问题，或市场机会。 商业需要是基于现有的问题或机会，推动组织变化的动力。它对为什么要提出组织变更，以及为什么要考虑新的项目组合组件、项目集或项目提供了理由。 商业目标 商业需求和所有其他类别产品需求的基础。 商业目的和目标描述了组织所要寻求实现的未来状态。 目的包含多个目标。目的较宏观且时间跨度较长，目标较具体且时间跨度较短。 商业分析Business Analysis 商业分析是识别商业需求，推荐相关解决方案，并启发文档化和管理需求的一系列活动集合。 可测量的、合理的商业目标。 商业分析的重点是通过开发非功能需求确保产品具有足够高的质量。 "},"项目管理知识/项目管理/变更管理.html":{"url":"项目管理知识/项目管理/变更管理.html","title":"变更管理","keywords":"","body":"变更管理 "},"项目管理知识/项目管理/项目生命周期.html":{"url":"项目管理知识/项目管理/项目生命周期.html","title":"项目生命周期","keywords":"","body":"项目生命周期 瀑布型 迭代型 增量型 适应型（敏捷） "},"项目管理知识/项目管理/风险管理.html":{"url":"项目管理知识/项目管理/风险管理.html","title":"风险管理","keywords":"","body":"风险管理 规划风险管理——定义如何实施项目风险管理活动。 识别风险—— 定性分析 定量分析 风险应对规划 风险监控 "}}